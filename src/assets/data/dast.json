[
    {
      "issueType": "ADNS Blind SSRF on Sensitive Headers",
      "severity": "M",
      "numberOfIssues": 5,
      "entity": "(Page)",
      "cvssScore": "5.9",
      "url": "https://apps.firstnet.att.com/",
      "action": "There are several mitigation techniques:<br>[1] If possible, use library calls rather than building the requests yourself.<br>[2] Strategy: Whitelist<br>Create a whitelist of servers and services that are permitted, preferably per role or function.<br>[3] Strategy: Libraries or Frameworks<br>Use a vetted library or framework that prevents this weakness from occurring, or at least provides constructs that make it easier to avoid.<br>For example, consider using the ESAPI Encoding control<br>https://owasp.org/www-project-enterprise-security-api<br>or a similar tool, library, or framework. These can help to encode output",
      "cause": "Incorrect processing, sanitation, or validation of user input that contains elements later joined with URI",
      "risk": "The attacker can retrieve unauthorized resources as well as impact the integrity of those resources. Scans of various networks, including internals, can be done using the application's server, which can put the server into various blacklists.",
      "fix": "Validate and sanitize all externally supplied data. Validate access control mechanisms."
    },
    {
      "issueType": "ADNS Blind SSRF on Sensitive Headers",
      "severity": "M",
      "numberOfIssues": 5,
      "entity": "bundle.f3ad0a02973eed9de7b5.js (Page)",
      "cvssScore": "5.9",
      "url": "https://apps.firstnet.att.com/js/bundle.f3ad0a02973eed9de7b5.js",
      "action": "There are several mitigation techniques:<br>[1] If possible, use library calls rather than building the requests yourself.<br>[2] Strategy: Whitelist<br>Create a whitelist of servers and services that are permitted, preferably per role or function.<br>[3] Strategy: Libraries or Frameworks<br>Use a vetted library or framework that prevents this weakness from occurring, or at least provides constructs that make it easier to avoid.<br>For example, consider using the ESAPI Encoding control<br>https://owasp.org/www-project-enterprise-security-api<br>or a similar tool, library, or framework. These can help to encode output",
      "cause": "Incorrect processing, sanitation, or validation of user input that contains elements later joined with URI",
      "risk": "The attacker can retrieve unauthorized resources as well as impact the integrity of those resources. Scans of various networks, including internals, can be done using the application's server, which can put the server into various blacklists.",
      "fix": "Validate and sanitize all externally supplied data. Validate access control mechanisms."
    },
    {
      "issueType": "ADNS Blind SSRF on Sensitive Headers",
      "severity": "M",
      "numberOfIssues": 5,
      "entity": "989714ed69470e5fa491618e894612628200129e9927 (Page)",
      "cvssScore": "5.9",
      "url": "https://apps.firstnet.att.com/public/989714ed69470e5fa491618e894612628200129e9927",
      "action": "There are several mitigation techniques:<br>[1] If possible, use library calls rather than building the requests yourself.<br>[2] Strategy: Whitelist<br>Create a whitelist of servers and services that are permitted, preferably per role or function.<br>[3] Strategy: Libraries or Frameworks<br>Use a vetted library or framework that prevents this weakness from occurring, or at least provides constructs that make it easier to avoid.<br>For example, consider using the ESAPI Encoding control<br>https://owasp.org/www-project-enterprise-security-api<br>or a similar tool, library, or framework. These can help to encode output",
      "cause": "Incorrect processing, sanitation, or validation of user input that contains elements later joined with URI",
      "risk": "The attacker can retrieve unauthorized resources as well as impact the integrity of those resources. Scans of various networks, including internals, can be done using the application's server, which can put the server into various blacklists.",
      "fix": "Validate and sanitize all externally supplied data. Validate access control mechanisms."
    },
    {
      "issueType": "ADNS Blind SSRF on Sensitive Headers",
      "severity": "M",
      "numberOfIssues": 5,
      "entity": "detm-container-hdr.js (Page)",
      "cvssScore": "5.9",
      "url": "https://apps.localhost.com/scripts/adobe/virtual/detm-container-hdr.js",
      "action": "There are several mitigation techniques:<br>[1] If possible, use library calls rather than building the requests yourself.<br>[2] Strategy: Whitelist<br>Create a whitelist of servers and services that are permitted, preferably per role or function.<br>[3] Strategy: Libraries or Frameworks<br>Use a vetted library or framework that prevents this weakness from occurring, or at least provides constructs that make it easier to avoid.<br>For example, consider using the ESAPI Encoding control<br>https://owasp.org/www-project-enterprise-security-api<br>or a similar tool, library, or framework. These can help to encode output",
      "cause": "Incorrect processing, sanitation, or validation of user input that contains elements later joined with URI",
      "risk": "The attacker can retrieve unauthorized resources as well as impact the integrity of those resources. Scans of various networks, including internals, can be done using the application's server, which can put the server into various blacklists.",
      "fix": "Validate and sanitize all externally supplied data. Validate access control mechanisms."
    },
    {
      "issueType": "ADNS Blind SSRF on Sensitive Headers",
      "severity": "M",
      "numberOfIssues": 5,
      "entity": "n (Page)",
      "cvssScore": "5.9",
      "url": "https://apps.localhost.com/js/_props.href,/n",
      "action": "There are several mitigation techniques:<br>[1] If possible, use library calls rather than building the requests yourself.<br>[2] Strategy: Whitelist<br>Create a whitelist of servers and services that are permitted, preferably per role or function.<br>[3] Strategy: Libraries or Frameworks<br>Use a vetted library or framework that prevents this weakness from occurring, or at least provides constructs that make it easier to avoid.<br>For example, consider using the ESAPI Encoding control<br>https://owasp.org/www-project-enterprise-security-api<br>or a similar tool, library, or framework. These can help to encode output",
      "cause": "Incorrect processing, sanitation, or validation of user input that contains elements later joined with URI",
      "risk": "The attacker can retrieve unauthorized resources as well as impact the integrity of those resources. Scans of various networks, including internals, can be done using the application's server, which can put the server into various blacklists.",
      "fix": "Validate and sanitize all externally supplied data. Validate access control mechanisms."
    },
    {
      "issueType": "Weak Cipher Suites - ROBOT Attack: Vulnerable cipher suites are supported by the server",
      "severity": "M",
      "numberOfIssues": 2,
      "entity": "localcontrol.localhost.com (Page)",
      "cvssScore": "6.4",
      "url": "https://apps.localhost.com/api/user/profile",
      "action": "Please check for patches and updates; the patches and affected products list may change from time to time. For more information on patches and affected products, refer https://robotattack.org/#patches. It is also recommended to fully deprecate RSA encryption-based key exchanges in TLS because it does not provide Forward Secrecy.",
      "risk": "It may be possible to steal or manipulate customer session and cookies, which might be used to impersonate a legitimate user, allowing the hacker to view or alter user records, and to perform transactions as that user.",
      "fix": "Change server's supported ciphersuite"
    },
    {
      "issueType": "Weak Cipher Suites - ROBOT Attack: Vulnerable cipher suites are supported by the server",
      "severity": "M",
      "numberOfIssues": 2,
      "entity": "localcontrol.localhost.com (Page)",
      "cvssScore": "6.4",
      "url": "https://apps.localhost.com",
      "action": "Please check for patches and updates; the patches and affected products list may change from time to time. For more information on patches and affected products, refer https://robotattack.org/#patches. It is also recommended to fully deprecate RSA encryption-based key exchanges in TLS because it does not provide Forward Secrecy.",
      "risk": "It may be possible to steal or manipulate customer session and cookies, which might be used to impersonate a legitimate user, allowing the hacker to view or alter user records, and to perform transactions as that user.",
      "fix": "Change server's supported ciphersuite"
    },
    {
      "issueType": "Weak Ciphers are detected: Not all cipher suites support Perfect Forward Secrecy",
      "severity": "M",
      "numberOfIssues": 1,
      "entity": "apps.localhost.com (Page)",
      "cvssScore": "5.8",
      "url": "https://apps.localhost.com/scripts/adobe/virtual/detm-container-ftr.js",
      "action": "Support PFS by using cipher suites with ECDHE - Elliptic Curve Diffie-Hellman Ephemeral and DHE - Diffie-Hellman Ephemeral key exchanges",
      "cause": "The web server or application server are configured in an insecure way",
      "risk": "An attacker can decrypt a secure communication by generating a secret key once the host's private key is compromised. AppScan detected weak cipher suites that do not support PFS - Perfect Forward Secrecy. When PFS is not supported, if the host's private key is compromised, an attacker can decrypt the pre-master secret and later generate the Secret Key that is used for secure communication. This is because no unique session key is generated for every communication session between Client and Server.",
      "fix": "Change server's supported ciphersuite"
    },
    {
      "issueType": "Check for SRI (Subresource Integrity) support",
      "severity": "L",
      "numberOfIssues": 1,
      "entity": "validate (Page)",
      "cvssScore": "5.0",
      "url": "https://training.localhost.com/oauth/validate",
      "action": "Add to each third-party script/link element support to SRI (Subresource Integrity)",
      "risk": "Without SRI, there is a risk that an attacker could modify or tamper with third-party resources served to users, leading to potential security vulnerabilities.",
      "fix": "Implement SRI for all third-party scripts and resources to ensure their integrity."
    },
    {
      "issueType": "Cookie with Insecure or Improper or Missing SameSite attribute",
      "severity": "L",
      "numberOfIssues": 1,
      "entity": "SESSION (Cookie)",
      "cvssScore": "4.1",
      "url": "https://apps.localhost.com/",
      "action": "[1] Review possible solutions for configuring SameSite Cookie attribute to recommended values.<br>[2] Restrict Cookies to a first-party or same-site context.<br>[3] Verify and set the SameSite attribute of your cookie to Strict, to ensure that the cookie will only be sent in a first-party context.<br>[4] Or, if you want to relax the restrictions of first-party context, then verify and set the SameSite attribute of the cookie to Lax with Secure Flag enabled and transferred over HTTPS.",
      "risk": "Prevent cookie information leakage by restricting cookies to first-party or same-site context. Attacks can extend to Cross-Site Request-Forgery (CSRF) attacks if there are no additional protections in place (such as Anti-CSRF tokens).",
      "fix": "Review possible solutions for configuring SameSite Cookie attribute to recommended values"
    }
  ]

